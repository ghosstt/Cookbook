{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_components/home/home.component.css","webpack:///./src/app/_components/home/home.component.html","webpack:///./src/app/_components/home/home.component.ts","webpack:///./src/app/_components/ingredients/ingredient-add/ingredient-add.component.css","webpack:///./src/app/_components/ingredients/ingredient-add/ingredient-add.component.html","webpack:///./src/app/_components/ingredients/ingredient-add/ingredient-add.component.ts","webpack:///./src/app/_components/ingredients/ingredient-card/ingredient-card.component.css","webpack:///./src/app/_components/ingredients/ingredient-card/ingredient-card.component.html","webpack:///./src/app/_components/ingredients/ingredient-card/ingredient-card.component.ts","webpack:///./src/app/_components/ingredients/ingredient-edit/ingredient-edit.component.css","webpack:///./src/app/_components/ingredients/ingredient-edit/ingredient-edit.component.html","webpack:///./src/app/_components/ingredients/ingredient-edit/ingredient-edit.component.ts","webpack:///./src/app/_components/ingredients/ingredient-list/ingredient-list.component.css","webpack:///./src/app/_components/ingredients/ingredient-list/ingredient-list.component.html","webpack:///./src/app/_components/ingredients/ingredient-list/ingredient-list.component.ts","webpack:///./src/app/_components/ingredients/ingredient.module.ts","webpack:///./src/app/_components/login/login.component.css","webpack:///./src/app/_components/login/login.component.html","webpack:///./src/app/_components/login/login.component.ts","webpack:///./src/app/_components/recipes/recipe-add/recipe-add.component.css","webpack:///./src/app/_components/recipes/recipe-add/recipe-add.component.html","webpack:///./src/app/_components/recipes/recipe-add/recipe-add.component.ts","webpack:///./src/app/_components/recipes/recipe-card/recipe-card.component.css","webpack:///./src/app/_components/recipes/recipe-card/recipe-card.component.html","webpack:///./src/app/_components/recipes/recipe-card/recipe-card.component.ts","webpack:///./src/app/_components/recipes/recipe-edit/recipe-edit.component.css","webpack:///./src/app/_components/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/_components/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/_components/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/_components/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/_components/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/_components/recipes/recipe.module.ts","webpack:///./src/app/_components/register/register.component.css","webpack:///./src/app/_components/register/register.component.html","webpack:///./src/app/_components/register/register.component.ts","webpack:///./src/app/_guards/auth.guard.ts.ts","webpack:///./src/app/_interceptors/http-error-interceptor.ts","webpack:///./src/app/_resolvers/ingredient-list.resolver..ts","webpack:///./src/app/_resolvers/recipe-list.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/ingredient.service.ts","webpack:///./src/app/_services/recipe.service.ts","webpack:///./src/app/_shared/components/page-not-found/page-not-found.component.css","webpack:///./src/app/_shared/components/page-not-found/page-not-found.component.html","webpack:///./src/app/_shared/components/page-not-found/page-not-found.component.ts","webpack:///./src/app/_shared/material.module.ts","webpack:///./src/app/_shared/shared.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".card {\\r\\n    cursor: pointer;\\r\\n    box-shadow: 5px 5px 10px 3px rgba(92,92,92,1);\\r\\n}\\r\\n\\r\\n.card img {\\r\\n    -webkit-transform: scale(1.0, 1.0);\\r\\n            transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card:hover img {\\r\\n    -webkit-transform: scale(1.2, 1.2);\\r\\n            transform: scale(1.2, 1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper .fa {\\r\\n    font-size: 140px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBR2YsNkNBQTZDO0FBQ2pEOztBQUVBO0lBQ0ksa0NBQTBCO1lBQTFCLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksa0NBQTBCO1lBQTFCLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsb0NBQW9DO0lBQ3BDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixPQUFPO0lBQ1AsUUFBUTtJQUNSLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsVUFBVTtBQUNkOztBQUVBO0lBQ0ksU0FBUztJQUNULFVBQVU7QUFDZDs7QUFFQTtJQUNJLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiA1cHggNXB4IDEwcHggM3B4IHJnYmEoOTIsOTIsOTIsMSk7XHJcbiAgICAtbW96LWJveC1zaGFkb3c6IDVweCA1cHggMTBweCAzcHggcmdiYSg5Miw5Miw5MiwxKTtcclxuICAgIGJveC1zaGFkb3c6IDVweCA1cHggMTBweCAzcHggcmdiYSg5Miw5Miw5MiwxKTtcclxufVxyXG5cclxuLmNhcmQgaW1nIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wLCAxLjApO1xyXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XHJcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XHJcbn1cclxuXHJcbi5jYXJkOmhvdmVyIGltZyB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMiwgMS4yKTtcclxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xyXG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xyXG4gICAgb3BhY2l0eTogMC43O1xyXG59XHJcblxyXG4uY2FyZC1pbWctd3JhcHBlciB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4ubWVtYmVyLWljb25zIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogLTMwJTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG5cclxuLmNhcmQtaW1nLXdyYXBwZXI6aG92ZXIgLm1lbWJlci1pY29ucyB7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG4uYW5pbWF0ZSB7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuLmNhcmQtaW1nLXdyYXBwZXIgLmZhIHtcclxuICAgIGZvbnQtc2l6ZTogMTQwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\r\\n      <div class=\\\"card bg-light border-secondary mb-3\\\" (click)=\\\"openCreateRecipeDialog()\\\">\\r\\n        <div class=\\\"card-img-wrapper\\\">\\r\\n          <img src=\\\"../../../assets/images/create_recipe.png\\\" alt=\\\"Create Recipe\\\" class=\\\"card-img-top\\\">\\r\\n        </div>\\r\\n        <div class=\\\"card-footer bg-transparent border-secondary text-center mb-1\\\">\\r\\n          <i class=\\\"fa fa-book text-secondary\\\"></i>\\r\\n          Create Recipe\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\r\\n      <div class=\\\"card bg-light border-secondary mb-3\\\" (click)=\\\"openAddIngredientDialog()\\\">\\r\\n        <div class=\\\"card-img-wrapper\\\">\\r\\n          <img src=\\\"../../../assets/images/add_ingredient.png\\\" alt=\\\"Add Ingredient\\\" class=\\\"card-img-top\\\">\\r\\n        </div>\\r\\n        <div class=\\\"card-footer bg-transparent border-secondary text-center mb-1\\\">\\r\\n          <i class=\\\"fa fa-book text-secondary\\\"></i>\\r\\n          Add Ingredient\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\r\\n      <div class=\\\"card bg-light border-secondary mb-3\\\" [routerLink]=\\\"['/recipe/list']\\\">\\r\\n        <div class=\\\"card-img-wrapper\\\">\\r\\n          <img src=\\\"../../../assets/images/recipe.png\\\" alt=\\\"Recipe List\\\" class=\\\"card-img-top\\\">\\r\\n        </div>\\r\\n        <div class=\\\"card-footer bg-transparent border-secondary text-center mb-1\\\">\\r\\n          <i class=\\\"fa fa-book text-secondary\\\"></i>\\r\\n          Recipe List\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-3 col-md-4 col-sm-6\\\">\\r\\n      <div class=\\\"card bg-light border-secondary mb-3\\\" [routerLink]=\\\"['/ingredient/list']\\\">\\r\\n        <div class=\\\"card-img-wrapper\\\">\\r\\n          <img src=\\\"../../../assets/images/ingredients.png\\\" alt=\\\"Ingredient List\\\" class=\\\"card-img-top\\\">\\r\\n        </div>\\r\\n        <div class=\\\"card-footer bg-transparent border-secondary text-center mb-1\\\">\\r\\n          <i class=\\\"fa fa-book text-secondary\\\"></i>\\r\\n          Ingredient List\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { IngredientAddComponent } from '../ingredients/ingredient-add/ingredient-add.component';\r\nimport { RecipeAddComponent } from '../recipes/recipe-add/recipe-add.component';\r\nimport { IngredientService } from 'src/app/_services/ingredient.service';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { Ingredient } from 'src/app/_models/ingredient';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private ingredientService: IngredientService,\r\n    private authService: AuthService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openCreateRecipeDialog() {\r\n    this.ingredientService.getIngredients(this.authService.userId).subscribe((ingredients: Ingredient[]) => {\r\n      const dialogRef = this.dialog.open(RecipeAddComponent, {\r\n        disableClose: false,\r\n        data: { userId: this.authService.userId, ingredients },\r\n        width: '400px'\r\n      });\r\n    });\r\n  }\r\n\r\n  openAddIngredientDialog() {\r\n    const dialogRef = this.dialog.open(IngredientAddComponent, {\r\n      disableClose: false,\r\n      data: { userId: this.authService.userId },\r\n      width: '400px'\r\n    });\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvaW5ncmVkaWVudHMvaW5ncmVkaWVudC1hZGQvaW5ncmVkaWVudC1hZGQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL2luZ3JlZGllbnRzL2luZ3JlZGllbnQtYWRkL2luZ3JlZGllbnQtYWRkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<form [formGroup]=\\\"addIngredientForm\\\">\\r\\n    <h2 md-dialog-title>Add Ingredient</h2>\\r\\n    <hr>\\r\\n    <mat-dialog-content>\\r\\n        <div class=\\\"example-container\\\">\\r\\n            <p>\\r\\n                <mat-form-field>\\r\\n                    <input matInput\\r\\n                        formControlName=\\\"ingredientName\\\"\\r\\n                        placeholder=\\\"Name\\\">\\r\\n                </mat-form-field>\\r\\n            </p>\\r\\n            <p>\\r\\n                <mat-form-field>\\r\\n                    <textarea matInput\\r\\n                        formControlName=\\\"ingredientDescription\\\"\\r\\n                        placeholder=\\\"Description\\\"\\r\\n                        cdkTextareaAutosize\\r\\n                        cdkAutosizeMinRows=\\\"5\\\"\\r\\n                        cdkAutosizeMaxRows=\\\"5\\\">\\r\\n                    </textarea>\\r\\n                </mat-form-field>        \\r\\n            </p>\\r\\n        </div>\\r\\n    </mat-dialog-content>\\r\\n    <!-- <hr>\\r\\n    <mat-dialog-actions>\\r\\n        <button type=\\\"submit\\\" md-raised-button>Add</button>&nbsp;\\r\\n        <button type=\\\"button\\\" md-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </mat-dialog-actions> -->\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef  } from '@angular/material';\r\nimport { IngredientService } from 'src/app/_services/ingredient.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Ingredient } from 'src/app/_models/ingredient';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-ingredient-add',\r\n  templateUrl: './ingredient-add.component.html',\r\n  styleUrls: ['./ingredient-add.component.css']\r\n})\r\n\r\nexport class IngredientAddComponent implements OnInit {\r\n  addIngredientForm: FormGroup;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<IngredientAddComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { userId: number },\r\n    private ingredientService: IngredientService,\r\n    private alertifyService: AlertifyService,\r\n    private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dialogRef.beforeClosed().subscribe(() => {\r\n      this.add();\r\n    });\r\n\r\n    this.addIngredientForm = this.formBuilder.group({\r\n      ingredientName: ['', Validators.required],\r\n      ingredientDescription: ['']\r\n    });\r\n  }\r\n\r\n  add() {\r\n    if (this.addIngredientForm.invalid) {\r\n      this.alertifyService.error('Error: Cannot save, ingredient name is empty');\r\n      return;\r\n    }\r\n\r\n    const ingredient: Ingredient = {\r\n      ingredientId: 0,\r\n      userId: this.data.userId,\r\n      name: this.addIngredientForm.get('ingredientName').value,\r\n      description: this.addIngredientForm.get('ingredientDescription').value,\r\n      imgSrc: null\r\n    };\r\n\r\n    this.ingredientService.addIngredient(ingredient).subscribe(response => {\r\n      console.log(response, 'Success: Add Ingredient');\r\n    }, error => {\r\n      console.log(error, 'Error: Edit Ingredient');\r\n      this.alertifyService.error(error);\r\n    });\r\n  }\r\n}\r\n","module.exports = \".card {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n\\r\\n.card-img-wrapper:after {\\r\\n    content: '';\\r\\n    display: block;\\r\\n    padding-top: 100%;\\r\\n  }\\r\\n\\r\\n.card-img-wrapper img {\\r\\n    width: auto;\\r\\n    height: 100%;\\r\\n    max-width: none;\\r\\n    position: absolute;\\r\\n    left: 50%;\\r\\n    top: 0;\\r\\n    -webkit-transform: translateX(-50%);\\r\\n            transform: translateX(-50%);\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvaW5ncmVkaWVudHMvaW5ncmVkaWVudC1jYXJkL2luZ3JlZGllbnQtY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEI7O0FBRUE7SUFDRSxXQUFXO0lBQ1gsY0FBYztJQUNkLGlCQUFpQjtFQUNuQjs7QUFFQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0lBQ1osZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsTUFBTTtJQUNOLG1DQUEyQjtZQUEzQiwyQkFBMkI7RUFDN0IiLCJmaWxlIjoic3JjL2FwcC9fY29tcG9uZW50cy9pbmdyZWRpZW50cy9pbmdyZWRpZW50LWNhcmQvaW5ncmVkaWVudC1jYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uY2FyZC1pbWctd3JhcHBlciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1pbWctd3JhcHBlcjphZnRlciB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcGFkZGluZy10b3A6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5jYXJkLWltZy13cmFwcGVyIGltZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1heC13aWR0aDogbm9uZTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRvcDogMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICB9Il19 */\"","module.exports = \"<div class=\\\"card bg-light border-secondary mb-3\\\" (click)=\\\"openUpdateIngredientDialog()\\\">\\r\\n  <div class=\\\"card-img-wrapper\\\">\\r\\n    <img src=\\\"../../../../assets/images/ingredients.png\\\" [alt]=\\\"ingredient.name\\\" class=\\\"card-img-top\\\">\\r\\n  </div>\\r\\n  <div class=\\\"card-footer bg-transparent border-secondary text-center mb-1\\\">\\r\\n    {{ ingredient.name }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>{{ ingredient.Name }}</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <div class=\\\"card-img-wrapper\\\">\\r\\n        <img mat-card-image [src]=\\\"ingredient.ImageSrc\\\" [alt]=\\\"ingredient.Name\\\">\\r\\n    </div>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button>Edit</button>\\r\\n      <button mat-button>Delete</button>\\r\\n    </mat-card-actions>\\r\\n</mat-card> -->\"","import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { Ingredient } from 'src/app/_models/ingredient';\r\nimport { IngredientEditComponent } from '../ingredient-edit/ingredient-edit.component';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-ingredient-card',\r\n  templateUrl: './ingredient-card.component.html',\r\n  styleUrls: ['./ingredient-card.component.css']\r\n})\r\nexport class IngredientCardComponent implements OnInit {\r\n  @Input()\r\n  ingredient: Ingredient;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private cdRef: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getImgSrc(filename: string): string {\r\n    if (filename === null) {\r\n      return null;\r\n    }\r\n\r\n    return `../../../../assets/images/ingredients/${ filename }`;\r\n  }\r\n\r\n  openUpdateIngredientDialog() {\r\n    const dialogRef = this.dialog.open(IngredientEditComponent, {\r\n      disableClose: false,\r\n      data: {\r\n        userId: this.ingredient.userId,\r\n        ingredient: this.ingredient\r\n      },\r\n      width: '400px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      this.cdRef.detectChanges();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvaW5ncmVkaWVudHMvaW5ncmVkaWVudC1lZGl0L2luZ3JlZGllbnQtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvX2NvbXBvbmVudHMvaW5ncmVkaWVudHMvaW5ncmVkaWVudC1lZGl0L2luZ3JlZGllbnQtZWRpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<form [formGroup]=\\\"editIngredientForm\\\">\\r\\n    <h2 md-dialog-title>Edit Ingredient</h2>\\r\\n    <hr>\\r\\n    <mat-dialog-content>\\r\\n        <div class=\\\"example-container\\\">\\r\\n            <p>\\r\\n                <mat-form-field>\\r\\n                    <input matInput\\r\\n                        formControlName=\\\"ingredientName\\\"\\r\\n                        placeholder=\\\"Name\\\">\\r\\n                </mat-form-field>\\r\\n            </p>\\r\\n            <p>\\r\\n                <mat-form-field>\\r\\n                    <textarea matInput\\r\\n                        formControlName=\\\"ingredientDescription\\\"\\r\\n                        placeholder=\\\"Description\\\"\\r\\n                        cdkTextareaAutosize\\r\\n                        cdkAutosizeMinRows=\\\"5\\\"\\r\\n                        cdkAutosizeMaxRows=\\\"5\\\">\\r\\n                    </textarea>\\r\\n                </mat-form-field>        \\r\\n            </p>\\r\\n        </div>\\r\\n    </mat-dialog-content>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef  } from '@angular/material';\r\nimport { IngredientService } from 'src/app/_services/ingredient.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Ingredient } from 'src/app/_models/ingredient';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-ingredient-edit',\r\n  templateUrl: './ingredient-edit.component.html',\r\n  styleUrls: ['./ingredient-edit.component.css']\r\n})\r\n\r\nexport class IngredientEditComponent implements OnInit {\r\n  editIngredientForm: FormGroup;\r\n  origValue: Ingredient;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<IngredientEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { userId: number, ingredient: Ingredient },\r\n    private ingredientService: IngredientService,\r\n    private alertifyService: AlertifyService,\r\n    private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dialogRef.beforeClosed().subscribe(() => {\r\n      this.edit();\r\n    });\r\n\r\n    this.editIngredientForm = this.formBuilder.group({\r\n      ingredientName: [this.data.ingredient.name, Validators.required],\r\n      ingredientDescription: [this.data.ingredient.description]\r\n    });\r\n\r\n    this.origValue = {\r\n      ingredientId: this.data.ingredient.ingredientId,\r\n      userId: this.data.ingredient.userId,\r\n      name: this.data.ingredient.name,\r\n      description: this.data.ingredient.description,\r\n      imgSrc: this.data.ingredient.imgSrc,\r\n    };\r\n  }\r\n\r\n\r\n  setData() {\r\n    this.data.ingredient.name = this.editIngredientForm.get('ingredientName').value;\r\n    this.data.ingredient.description = this.editIngredientForm.get('ingredientDescription').value;\r\n  }\r\n\r\n  setOrigData() {\r\n    this.data.ingredient.name = this.origValue.name;\r\n    this.data.ingredient.description = this.origValue.description;\r\n  }\r\n\r\n  edit() {\r\n    if (this.editIngredientForm.invalid) {\r\n      this.alertifyService.error('Error: Cannot save, ingredient name is empty');\r\n      return;\r\n    }\r\n\r\n    this.setData();\r\n\r\n    this.ingredientService.updateIngredient(this.data.ingredient).subscribe(response => {\r\n      console.log(response, 'Success: Edit Ingredient');\r\n    }, error => {\r\n      this.setOrigData();\r\n      console.log(error, 'Error: Edit Ingredient');\r\n      this.alertifyService.error(error);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL2luZ3JlZGllbnRzL2luZ3JlZGllbnQtbGlzdC9pbmdyZWRpZW50LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let ingredient of ingredients\\\" class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n      <app-ingredient-card [ingredient]=\\\"ingredient\\\"></app-ingredient-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>  \"","import { Component, OnInit } from '@angular/core';\r\nimport { Ingredient } from 'src/app/_models/ingredient';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-ingredient-list',\r\n  templateUrl: './ingredient-list.component.html',\r\n  styleUrls: ['./ingredient-list.component.css']\r\n})\r\nexport class IngredientListComponent implements OnInit {\r\n  ingredients: Ingredient[];\r\n\r\n  constructor(private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe(data => {\r\n      // tslint:disable-next-line: no-string-literal\r\n      this.ingredients = data['ingredients'];\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IngredientCardComponent } from './ingredient-card/ingredient-card.component';\r\nimport { IngredientListComponent } from './ingredient-list/ingredient-list.component';\r\nimport { IngredientAddComponent } from './ingredient-add/ingredient-add.component';\r\nimport { MatDialogModule } from '@angular/material';\r\nimport { MaterialModule } from 'src/app/_shared/material.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IngredientEditComponent } from './ingredient-edit/ingredient-edit.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    IngredientCardComponent,\r\n    IngredientListComponent,\r\n    IngredientAddComponent,\r\n    IngredientEditComponent\r\n  ],\r\n  declarations: [\r\n    IngredientCardComponent,\r\n    IngredientListComponent,\r\n    IngredientAddComponent,\r\n    IngredientEditComponent\r\n  ],\r\n  entryComponents: [\r\n    IngredientAddComponent,\r\n    IngredientEditComponent\r\n  ]\r\n})\r\nexport class IngredientModule { }\r\n","module.exports = \".login-form {\\r\\n    width: 385px;\\r\\n    margin: 30px auto;\\r\\n}\\r\\n.login-form form {        \\r\\n    margin-bottom: 15px;\\r\\n    background: #f7f7f7;\\r\\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n    padding: 30px;\\r\\n}\\r\\n.login-form h2 {\\r\\n    margin: 0 0 15px;\\r\\n}\\r\\n.form-control, .login-btn {\\r\\n    min-height: 38px;\\r\\n    border-radius: 2px;\\r\\n}\\r\\n.input-group-addon .fa {\\r\\n    font-size: 18px;\\r\\n}\\r\\n.login-btn {\\r\\n    font-size: 15px;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsMENBQTBDO0lBQzFDLGFBQWE7QUFDakI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksZUFBZTtBQUNuQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XHJcbiAgICB3aWR0aDogMzg1cHg7XHJcbiAgICBtYXJnaW46IDMwcHggYXV0bztcclxufVxyXG4ubG9naW4tZm9ybSBmb3JtIHsgICAgICAgIFxyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIGJhY2tncm91bmQ6ICNmN2Y3Zjc7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgICBwYWRkaW5nOiAzMHB4O1xyXG59XHJcbi5sb2dpbi1mb3JtIGgyIHtcclxuICAgIG1hcmdpbjogMCAwIDE1cHg7XHJcbn1cclxuLmZvcm0tY29udHJvbCwgLmxvZ2luLWJ0biB7XHJcbiAgICBtaW4taGVpZ2h0OiAzOHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG59XHJcbi5pbnB1dC1ncm91cC1hZGRvbiAuZmEge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG59XHJcbi5sb2dpbi1idG4ge1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"login-form\\\">\\r\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n    <h2 class=\\\"text-center\\\">Sign in</h2>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span id=\\\"username-icon-span\\\" class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fa fa-user\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"username\\\"\\r\\n          formControlName=\\\"username\\\"\\r\\n          placeholder=\\\"Username\\\"\\r\\n          aria-label=\\\"Username\\\"\\r\\n          aria-describedby=\\\"username-icon-span\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.get('username').errors }\\\">\\r\\n        <div *ngIf=\\\"submitted && loginForm.get('username').hasError('required')\\\" class=\\\"invalid-feedback\\\">Username is required</div>\\r\\n      </div>\\r\\n      <div class=\\\"input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span id=\\\"password-icon-span\\\" class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fa fa-lock\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <input\\r\\n          type=\\\"password\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"password\\\"\\r\\n          formControlName=\\\"password\\\"\\r\\n          placeholder=\\\"Password\\\"\\r\\n          aria-label=\\\"Password\\\"\\r\\n          aria-describedby=\\\"password-icon-span\\\"\\r\\n          autocomplete=\\\"off\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && loginForm.get('password').errors }\\\">\\r\\n        <div *ngIf=\\\"submitted && loginForm.get('password').hasError('required')\\\" class=\\\"invalid-feedback\\\">Password is required</div>\\r\\n        <div *ngIf=\\\"submitted && loginForm.get('password').hasError('minlength')\\\" class=\\\"invalid-feedback\\\">Password must be at least 4 characters</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success login-btn btn-block\\\">Login</button>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"clearfix\\\">\\r\\n        <label class=\\\"pull-left checkbox-inline\\\">\\r\\n          <input type=\\\"checkbox\\\"> \\r\\n          Remember me\\r\\n        </label>\\r\\n        <a href=\\\"#\\\" class=\\\"pull-right\\\">Forgot Password?</a>\\r\\n      </div> -->\\r\\n    </div>\\r\\n  </form>\\r\\n  <p class=\\\"text-center text-muted small\\\">Don't have an account? <a [routerLink]=\\\"['/register']\\\">Sign up here!</a></p>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted: boolean;\r\n\r\n  get form() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private alertifyService: AlertifyService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.submitted = false;\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4)]]\r\n    });\r\n  }\r\n\r\n  login() {\r\n    this.submitted = true;\r\n\r\n    if (!this.loginForm.valid) {\r\n      return;\r\n    }\r\n\r\n    const formData = {\r\n      UserName: this.loginForm.get('username').value,\r\n      Password: this.loginForm.get('password').value\r\n    };\r\n\r\n    this.authService.login(formData).subscribe(() => {\r\n      this.alertifyService.success('Logged in');\r\n    }, error => {\r\n      this.alertifyService.error(error);\r\n    }, () => {\r\n      this.router.navigate(['/home']);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"mat-selection-list {\\r\\n    max-height: 300px;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvcmVjaXBlcy9yZWNpcGUtYWRkL3JlY2lwZS1hZGQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvX2NvbXBvbmVudHMvcmVjaXBlcy9yZWNpcGUtYWRkL3JlY2lwZS1hZGQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1zZWxlY3Rpb24tbGlzdCB7XHJcbiAgICBtYXgtaGVpZ2h0OiAzMDBweDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<form [formGroup]=\\\"addRecipeForm\\\">\\r\\n    <mat-list>\\r\\n        <h2 md-dialog-title>Create Recipe</h2>\\r\\n        <hr>\\r\\n        <mat-dialog-content>\\r\\n            <p>\\r\\n                <mat-form-field>\\r\\n                    <input matInput\\r\\n                        formControlName=\\\"recipeName\\\"\\r\\n                        placeholder=\\\"Recipe name\\\">\\r\\n                </mat-form-field>\\r\\n            </p>\\r\\n            <p>\\r\\n                <mat-form-field>\\r\\n                    <textarea matInput\\r\\n                        formControlName=\\\"recipeDescription\\\"\\r\\n                        placeholder=\\\"Recipe description\\\"\\r\\n                        cdkTextareaAutosize\\r\\n                        cdkAutosizeMinRows=\\\"5\\\"\\r\\n                        cdkAutosizeMaxRows=\\\"5\\\">\\r\\n                    </textarea>\\r\\n                </mat-form-field>        \\r\\n            \\r\\n            </p>\\r\\n        </mat-dialog-content>\\r\\n\\r\\n        <mat-divider [vertical]=\\\"true\\\"></mat-divider>\\r\\n        \\r\\n        <mat-selection-list\\r\\n            (selectionChange)=\\\"onSelectionChange()\\\"\\r\\n            formControlName=\\\"recipeIngredients\\\">\\r\\n            <mat-list-option *ngFor=\\\"let ingredient of data.ingredients\\\" [value]=\\\"ingredient.ingredientId\\\">\\r\\n                {{ ingredient.name }}\\r\\n            </mat-list-option>\\r\\n        </mat-selection-list>\\r\\n    </mat-list>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatListOption } from '@angular/material';\r\nimport { RecipeService } from 'src/app/_services/recipe.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Recipe } from 'src/app/_models/recipe';\r\nimport { Ingredient } from 'src/app/_models/ingredient';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-recipe-add',\r\n  templateUrl: './recipe-add.component.html',\r\n  styleUrls: ['./recipe-add.component.css']\r\n})\r\nexport class RecipeAddComponent implements OnInit {\r\n  addRecipeForm: FormGroup;\r\n  savedRecipeId = 0;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<RecipeAddComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { userId: number, ingredients: Ingredient[] } ,\r\n    private recipeService: RecipeService,\r\n    private alertifyService: AlertifyService,\r\n    private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dialogRef.beforeClosed().subscribe(() => {\r\n      this.add();\r\n    });\r\n\r\n    this.addRecipeForm = this.formBuilder.group({\r\n      recipeName: ['', Validators.required],\r\n      recipeDescription: [''],\r\n      recipeIngredients: ['']\r\n    });\r\n  }\r\n\r\n  onSelectionChange() {\r\n    this.add();\r\n  }\r\n\r\n  add() {\r\n    if (this.addRecipeForm.invalid) {\r\n      this.alertifyService.error('Error: Cannot save, recipe name is empty');\r\n      return;\r\n    }\r\n\r\n    const recipe: Recipe = {\r\n      recipeId: this.savedRecipeId,\r\n      userId: this.data.userId,\r\n      name: this.addRecipeForm.get('recipeName').value,\r\n      description: this.addRecipeForm.get('recipeDescription').value,\r\n      imgSrc: null,\r\n      ingredientIds: this.addRecipeForm.get('recipeIngredients').value\r\n    };\r\n\r\n    this.recipeService.addRecipe(recipe).subscribe((recipeId: number) => {\r\n      console.log(recipeId, 'Success: Add Recipe');\r\n\r\n      if (recipeId > 0) {\r\n        this.addRecipeForm.get('recipeName').disable();\r\n        this.addRecipeForm.get('recipeDescription').disable();\r\n      }\r\n\r\n      this.savedRecipeId = recipeId;\r\n    }, error => {\r\n      console.log(error, 'Error: Add Recipe');\r\n      this.alertifyService.error(error);\r\n    });\r\n  }\r\n}\r\n\r\n","module.exports = \".card {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvcmVjaXBlcy9yZWNpcGUtY2FyZC9yZWNpcGUtY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3JlY2lwZXMvcmVjaXBlLWNhcmQvcmVjaXBlLWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"card bg-light border-secondary mb-3\\\" (click)=\\\"openUpdateRecipeDialog()\\\">\\r\\n  <div class=\\\"card-img-wrapper\\\">\\r\\n    <img src=\\\"../../../../assets/images/recipe.png\\\" [alt]=\\\"recipe.name\\\" class=\\\"card-img-top\\\">\\r\\n  </div>\\r\\n  <div class=\\\"card-footer bg-transparent border-secondary text-center mb-1\\\">\\r\\n    {{ recipe.name }}\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { Recipe } from 'src/app/_models/recipe';\r\nimport { MatDialog } from '@angular/material';\r\nimport { RecipeService } from 'src/app/_services/recipe.service';\r\nimport { RecipeEditComponent } from '../recipe-edit/recipe-edit.component';\r\nimport { IngredientService } from 'src/app/_services/ingredient.service';\r\nimport { RecipeIngredients } from 'src/app/_models/recipe-ingredients';\r\nimport { forkJoin } from 'rxjs';\r\nimport { Ingredient } from 'src/app/_models/ingredient';\r\n\r\n@Component({\r\n  selector: 'app-recipe-card',\r\n  templateUrl: './recipe-card.component.html',\r\n  styleUrls: ['./recipe-card.component.css']\r\n})\r\nexport class RecipeCardComponent implements OnInit {\r\n  @Input()\r\n  recipe: Recipe;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private recipeService: RecipeService,\r\n    private ingredientService: IngredientService,\r\n    private cdRef: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getImgSrc(filename: string): string {\r\n    if (filename === null) {\r\n      return null;\r\n    }\r\n\r\n    return `../../../../assets/images/ingredients/${ filename }`;\r\n  }\r\n\r\n  openUpdateRecipeDialog() {\r\n    forkJoin(\r\n      this.ingredientService.getIngredients(this.recipe.userId),\r\n      this.recipeService.getRecipeIngredientIds(this.recipe.userId, this.recipe.recipeId))\r\n    .subscribe(([ingredientsList, recipeIngredientIds]) => {\r\n      this.recipe.ingredientIds = recipeIngredientIds;\r\n      const data = { recipe: this.recipe, ingredients: ingredientsList };\r\n      const dialogRef = this.dialog.open(RecipeEditComponent, {\r\n        disableClose: false,\r\n        data,\r\n        width: '400px'\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(() => {\r\n        this.cdRef.detectChanges();\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"mat-selection-list {\\r\\n    max-height: 300px;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvcmVjaXBlcy9yZWNpcGUtZWRpdC9yZWNpcGUtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9fY29tcG9uZW50cy9yZWNpcGVzL3JlY2lwZS1lZGl0L3JlY2lwZS1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtc2VsZWN0aW9uLWxpc3Qge1xyXG4gICAgbWF4LWhlaWdodDogMzAwcHg7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxubWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"","module.exports = \"<form [formGroup]=\\\"editRecipeForm\\\">\\r\\n    <mat-list>\\r\\n        <h2 md-dialog-title>Edit Recipe</h2>\\r\\n        <hr>\\r\\n        <mat-dialog-content>\\r\\n            <p>\\r\\n                <mat-form-field>\\r\\n                    <input matInput\\r\\n                        formControlName=\\\"recipeName\\\"\\r\\n                        placeholder=\\\"Recipe name\\\">\\r\\n                </mat-form-field>\\r\\n            </p>\\r\\n            <p>\\r\\n                <mat-form-field>\\r\\n                    <textarea matInput\\r\\n                        formControlName=\\\"recipeDescription\\\"\\r\\n                        placeholder=\\\"Recipe description\\\"\\r\\n                        cdkTextareaAutosize\\r\\n                        cdkAutosizeMinRows=\\\"5\\\"\\r\\n                        cdkAutosizeMaxRows=\\\"5\\\">\\r\\n                    </textarea>\\r\\n                </mat-form-field>        \\r\\n            \\r\\n            </p>\\r\\n        </mat-dialog-content>\\r\\n\\r\\n        <mat-divider [vertical]=\\\"true\\\"></mat-divider>\\r\\n        \\r\\n        <mat-selection-list\\r\\n            #ing\\r\\n            [compareWith]=\\\"compareFn\\\"\\r\\n            (selectionChange)=\\\"onSelectionChange($event, ing.options)\\\"\\r\\n            formControlName=\\\"recipeIngredients\\\">\\r\\n            <mat-list-option *ngFor=\\\"let ingredient of data.ingredients\\\" [value]=\\\"ingredient.ingredientId\\\">\\r\\n                {{ ingredient.name }}\\r\\n            </mat-list-option>\\r\\n        </mat-selection-list>\\r\\n    </mat-list>\\r\\n</form>\\r\\n\"","import { Component, OnInit, AfterViewInit, Inject, ChangeDetectorRef } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatListOption } from '@angular/material';\r\nimport { RecipeService } from 'src/app/_services/recipe.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Recipe } from 'src/app/_models/recipe';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { Ingredient } from 'src/app/_models/ingredient';\r\n\r\n@Component({\r\n  selector: 'app-recipe-edit',\r\n  templateUrl: './recipe-edit.component.html',\r\n  styleUrls: ['./recipe-edit.component.css']\r\n})\r\nexport class RecipeEditComponent implements OnInit, AfterViewInit {\r\n  editRecipeForm: FormGroup;\r\n  origValue: Recipe;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<RecipeEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { recipe: Recipe, ingredients: Ingredient[] },\r\n    private recipeService: RecipeService,\r\n    private alertifyService: AlertifyService,\r\n    private formBuilder: FormBuilder,\r\n    private cdRef: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dialogRef.beforeClosed().subscribe(() => {\r\n      this.edit();\r\n    });\r\n\r\n    this.editRecipeForm = this.formBuilder.group({\r\n      recipeName: [this.data.recipe.name, Validators.required],\r\n      recipeDescription: [this.data.recipe.description],\r\n      recipeIngredients: [this.data.recipe.ingredientIds]\r\n    });\r\n\r\n    this.origValue = {\r\n      recipeId: this.data.recipe.recipeId,\r\n      userId: this.data.recipe.userId,\r\n      name: this.data.recipe.name,\r\n      description: this.data.recipe.description,\r\n      ingredientIds: [...this.data.recipe.ingredientIds],\r\n      imgSrc: this.data.recipe.imgSrc,\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  onSelectionChange(event, options: MatListOption[]) {\r\n    this.edit();\r\n  }\r\n\r\n  setData() {\r\n    this.data.recipe.name = this.editRecipeForm.get('recipeName').value;\r\n    this.data.recipe.description = this.editRecipeForm.get('recipeDescription').value;\r\n    this.data.recipe.ingredientIds = this.editRecipeForm.get('recipeIngredients').value;\r\n  }\r\n\r\n  setOrigData() {\r\n    this.data.recipe.name = this.origValue.name;\r\n    this.data.recipe.description = this.origValue.description;\r\n    this.data.recipe.ingredientIds = [...this.origValue.ingredientIds];\r\n  }\r\n\r\n  edit() {\r\n    if (this.editRecipeForm.invalid) {\r\n      this.alertifyService.error('Error: Cannot save, recipe name is empty');\r\n      return;\r\n    }\r\n\r\n    this.setData();\r\n\r\n    this.recipeService.updateRecipe(this.data.recipe).subscribe((recipeId: number) => {\r\n      console.log(recipeId, 'Success: Edit Recipe');\r\n    }, error => {\r\n      this.setOrigData();\r\n      console.log(error, 'Error: Edit Recipe');\r\n      this.alertifyService.error(error);\r\n    });\r\n  }\r\n\r\n  compareFn(o1: number, o2: number) {\r\n    return o1 === o2;\r\n  }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3JlY2lwZXMvcmVjaXBlLWxpc3QvcmVjaXBlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let recipe of recipes\\\" class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n      <app-recipe-card [recipe]=\\\"recipe\\\"></app-recipe-card>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\r\\n      <div class=\\\"card bg-light border-secondary mb-3\\\">\\r\\n          <div class=\\\"card-img-wrapper\\\">\\r\\n            <img [src]=\\\"\\\" alt=\\\"Add Ingredient\\\" class=\\\"card-img-top\\\">\\r\\n          </div>\\r\\n          <div class=\\\"card-footer bg-transparent border-secondary text-center mb-1\\\">\\r\\n            Add Ingredient\\r\\n          </div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n  </div>\\r\\n</div>\\r\\n  \\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { Recipe } from 'src/app/_models/recipe';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-recipe-list',\r\n  templateUrl: './recipe-list.component.html',\r\n  styleUrls: ['./recipe-list.component.css']\r\n})\r\nexport class RecipeListComponent implements OnInit {\r\n  recipes: Recipe[];\r\n\r\n  constructor(private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe(data => {\r\n      // tslint:disable-next-line: no-string-literal\r\n      this.recipes = data['recipes'];\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RecipeCardComponent } from './recipe-card/recipe-card.component';\r\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RecipeAddComponent } from './recipe-add/recipe-add.component';\r\nimport { MaterialModule } from 'src/app/_shared/material.module';\r\nimport { MatDialogModule } from '@angular/material';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IngredientModule } from '../ingredients/ingredient.module';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    IngredientModule\r\n  ],\r\n  exports: [\r\n    RecipeCardComponent,\r\n    RecipeListComponent,\r\n    RecipeAddComponent,\r\n    RecipeEditComponent\r\n  ],\r\n  declarations: [\r\n    RecipeCardComponent,\r\n    RecipeListComponent,\r\n    RecipeAddComponent,\r\n    RecipeEditComponent\r\n  ],\r\n  entryComponents: [\r\n    RecipeAddComponent,\r\n    RecipeEditComponent\r\n  ]\r\n})\r\nexport class RecipeModule { }\r\n","module.exports = \".register-form {\\r\\n    width: 385px;\\r\\n    margin: 30px auto;\\r\\n}\\r\\n.register-form form {        \\r\\n    margin-bottom: 15px;\\r\\n    background: #f7f7f7;\\r\\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n    padding: 30px;\\r\\n}\\r\\n.register-form h2 {\\r\\n    margin: 0 0 15px;\\r\\n}\\r\\n.form-control, .register-btn {\\r\\n    min-height: 38px;\\r\\n    border-radius: 2px;\\r\\n}\\r\\n.input-group-addon .fa {\\r\\n    font-size: 18px;\\r\\n}\\r\\n.register-btn {\\r\\n    font-size: 15px;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsMENBQTBDO0lBQzFDLGFBQWE7QUFDakI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksZUFBZTtBQUNuQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVnaXN0ZXItZm9ybSB7XHJcbiAgICB3aWR0aDogMzg1cHg7XHJcbiAgICBtYXJnaW46IDMwcHggYXV0bztcclxufVxyXG4ucmVnaXN0ZXItZm9ybSBmb3JtIHsgICAgICAgIFxyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIGJhY2tncm91bmQ6ICNmN2Y3Zjc7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgICBwYWRkaW5nOiAzMHB4O1xyXG59XHJcbi5yZWdpc3Rlci1mb3JtIGgyIHtcclxuICAgIG1hcmdpbjogMCAwIDE1cHg7XHJcbn1cclxuLmZvcm0tY29udHJvbCwgLnJlZ2lzdGVyLWJ0biB7XHJcbiAgICBtaW4taGVpZ2h0OiAzOHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG59XHJcbi5pbnB1dC1ncm91cC1hZGRvbiAuZmEge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG59XHJcbi5yZWdpc3Rlci1idG4ge1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"register-form\\\">\\r\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n    <h2 class=\\\"text-center\\\">Register</h2>\\r\\n    <div class=\\\"form-group\\\">\\r\\n\\r\\n      <div class=\\\"input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span id=\\\"firstname-icon-span\\\" class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fa fa-user-circle\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"firstname\\\"\\r\\n          formControlName=\\\"firstname\\\"\\r\\n          placeholder=\\\"Firstname\\\"\\r\\n          aria-label=\\\"firstname\\\"\\r\\n          aria-describedby=\\\"firstname-icon-span\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('firstname').errors }\\\">\\r\\n        <div *ngIf=\\\"submitted && registerForm.get('firstname').hasError('required')\\\" class=\\\"invalid-feedback\\\">Firstname is required</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span id=\\\"lastname-icon-span\\\" class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fa fa-user-circle\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"lastname\\\"\\r\\n          formControlName=\\\"lastname\\\"\\r\\n          placeholder=\\\"Lastname\\\"\\r\\n          aria-label=\\\"lastname\\\"\\r\\n          aria-describedby=\\\"lastname-icon-span\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('lastname').errors }\\\">\\r\\n        <div *ngIf=\\\"submitted && registerForm.get('lastname').hasError('required')\\\" class=\\\"invalid-feedback\\\">Lastname is required</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span id=\\\"username-icon-span\\\" class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fa fa-user\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"username\\\"\\r\\n          formControlName=\\\"username\\\"\\r\\n          placeholder=\\\"Username\\\"\\r\\n          aria-label=\\\"Username\\\"\\r\\n          aria-describedby=\\\"username-icon-span\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('username').errors }\\\">\\r\\n        <div *ngIf=\\\"submitted && registerForm.get('username').hasError('required')\\\" class=\\\"invalid-feedback\\\">Username is required</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span id=\\\"password-icon-span\\\" class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fa fa-lock\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <input\\r\\n          type=\\\"password\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"password\\\"\\r\\n          formControlName=\\\"password\\\"\\r\\n          placeholder=\\\"Password\\\"\\r\\n          aria-label=\\\"Password\\\"\\r\\n          aria-describedby=\\\"password-icon-span\\\"\\r\\n          autocomplete=\\\"off\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('password').errors }\\\">\\r\\n        <div *ngIf=\\\"submitted && registerForm.get('password').hasError('required')\\\" class=\\\"invalid-feedback\\\">Password is required</div>\\r\\n        <div *ngIf=\\\"submitted && registerForm.get('password').hasError('minlength')\\\" class=\\\"invalid-feedback\\\">Password must be at least 4 characters</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span id=\\\"password-confirm-icon-span\\\" class=\\\"input-group-text\\\">\\r\\n            <i class=\\\"fa fa-lock\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <input\\r\\n          type=\\\"password\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"confirmPassword\\\"\\r\\n          formControlName=\\\"confirmPassword\\\"\\r\\n          placeholder=\\\"Confirm Password\\\"\\r\\n          aria-label=\\\"confirmPassword\\\"\\r\\n          aria-describedby=\\\"password-confirm-icon-span\\\"\\r\\n          autocomplete=\\\"off\\\"\\r\\n          [ngClass]=\\\"{ 'is-invalid': submitted && registerForm.get('confirmPassword').errors }\\\">\\r\\n        <div *ngIf=\\\"submitted && registerForm.get('confirmPassword').hasError('required')\\\" class=\\\"invalid-feedback\\\">Confirm password is required</div>\\r\\n        <div *ngIf=\\\"submitted && registerForm.get('confirmPassword').hasError('minlength')\\\" class=\\\"invalid-feedback\\\">Confirm password must be at least 4 characters</div>\\r\\n        <div *ngIf=\\\"submitted && registerForm.get('confirmPassword').hasError('mustMatch')\\\" class=\\\"invalid-feedback\\\">Password does not match!</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group text-center\\\">\\r\\n        <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Register</button>\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserRegister } from 'src/app/_models/user-register';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output()\r\n  cancelRegister = new EventEmitter<boolean>();\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private alertifyService: AlertifyService,\r\n    private formBuilder: FormBuilder,\r\n    private route: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstname: ['', Validators.required],\r\n      lastname: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(4)]]\r\n    }, { validator: this.passwordValidator('password', 'confirmPassword') });\r\n  }\r\n\r\n  passwordValidator(controlName1: string, controlName2: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control1 = formGroup.get(controlName1);\r\n      const control2 = formGroup.get(controlName2);\r\n\r\n      if (control2.errors && !control2.errors.mustMatch) {\r\n          // return if another validator has already found an error on the control2\r\n          return;\r\n      }\r\n\r\n      // set error on control2 if validation fails\r\n      if (control1.value !== control2.value) {\r\n        control2.setErrors({ mustMatch: true });\r\n      } else {\r\n        control2.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n  register() {\r\n    this.submitted = true;\r\n\r\n    if (!this.registerForm.valid) {\r\n      return;\r\n    }\r\n\r\n    const user: UserRegister = this.registerForm.getRawValue() as UserRegister;\r\n    this.authService.register(user).subscribe(() => {\r\n      this.alertifyService.success('Registration successful');\r\n      this.route.navigate(['/login']);\r\n    }, error => {\r\n      console.log(error);\r\n      this.alertifyService.error(error);\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.route.navigate(['/login']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, Route } from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router) {\r\n  }\r\n\r\n  canActivate(): boolean  {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                console.log(error, 'http-error-interceptor');\r\n                let errMsg = '';\r\n\r\n                // Client Side Error\r\n                if (error.error instanceof ErrorEvent) {\r\n                    errMsg = `Error: ${error.error.message}`;\r\n\r\n                } else {\r\n                    // Server Side Error\r\n                    errMsg = `Error: ${error.status} - ${error.error.errorMessage}`;\r\n                }\r\n\r\n                return throwError(errMsg);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Ingredient } from '../_models/ingredient';\r\nimport { IngredientService } from '../_services/ingredient.service';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class IngredientListResolver implements Resolve<Ingredient[]> {\r\n    constructor(\r\n        private ingredientService: IngredientService,\r\n        private alertifyService: AlertifyService,\r\n        private authService: AuthService,\r\n        private router: Router) {\r\n    }\r\n\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<Ingredient[]> {\r\n        return this.ingredientService.getIngredients(this.authService.userId).pipe(\r\n            catchError(error => {\r\n                this.alertifyService.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Recipe } from '../_models/recipe';\r\nimport { RecipeService } from '../_services/recipe.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class RecipeListResolver implements Resolve<Recipe[]> {\r\n    constructor(\r\n        private recipeService: RecipeService,\r\n        private authService: AuthService,\r\n        private alertifyService: AlertifyService,\r\n        private router: Router) {\r\n    }\r\n\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<Recipe[]> {\r\n        return this.recipeService.getRecipes(this.authService.userId).pipe(\r\n            catchError(error => {\r\n                this.alertifyService.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\ndeclare let alertify: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n  constructor() {\r\n  }\r\n\r\n  confirm(message: string, okHandler: () => any) {\r\n    alertify.confirm(message, (e: any) => {\r\n      if (e) {\r\n        okHandler();\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  alert(title: string, message: string) {\r\n    alertify.alert(title, message).set('movable', false);\r\n  }\r\n\r\n  success(message: string) {\r\n    alertify.success(message);\r\n  }\r\n\r\n  error(message: string) {\r\n    alertify.error(message);\r\n  }\r\n\r\n  warning(message: string) {\r\n    alertify.warning(message);\r\n  }\r\n\r\n  message(message: string) {\r\n    alertify.message(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserRegister } from '../_models/user-register';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl.concat('auth/');\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n\r\n  get username(): string {\r\n    if (this.loggedIn()) {\r\n      const token: string = localStorage.getItem('token');\r\n      const decodedToken = this.jwtHelper.decodeToken(token);\r\n      return decodedToken.unique_name;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  get userId(): number {\r\n    if (this.loggedIn()) {\r\n      const token: string = localStorage.getItem('token');\r\n      const decodedToken = this.jwtHelper.decodeToken(token);\r\n      return parseInt(decodedToken.nameid, 10);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  login(model: any): Observable<any> {\r\n    return this.http.post(this.baseUrl.concat('login'), model).pipe(\r\n      map((response: any) => {\r\n        if (response && response.token) {\r\n          localStorage.setItem('token', response.token);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  logout(fnCallback: (() => void) = null): void {\r\n    localStorage.removeItem('token');\r\n\r\n    if (fnCallback) {\r\n      fnCallback();\r\n    }\r\n  }\r\n\r\n  register(user: UserRegister): Observable<any> {\r\n    return this.http.post(this.baseUrl.concat('register'), user);\r\n  }\r\n\r\n  loggedIn(): boolean {\r\n    const token: string = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Ingredient } from '../_models/ingredient';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IngredientService {\r\n  baseUrl = environment.apiUrl.concat('ingredient');\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getIngredient(userId: number, ingredientId: number): Observable<Ingredient> {\r\n    const params = new HttpParams()\r\n      .set('userId', userId.toString())\r\n      .set('ingredientId', ingredientId.toString());\r\n\r\n    return this.http.get<Ingredient>(this.baseUrl + '/get', { params });\r\n  }\r\n\r\n  getIngredients(userId: number): Observable<Ingredient[]> {\r\n    const params = new HttpParams().set('userId', userId.toString());\r\n    return this.http.get<Ingredient[]>(this.baseUrl + '/list', { params });\r\n  }\r\n\r\n  addIngredient(ingredient: Ingredient): Observable<number> {\r\n    return this.http.post<number>(this.baseUrl + '/add', ingredient);\r\n  }\r\n\r\n  updateIngredient(ingredient: Ingredient): Observable<number> {\r\n    return this.http.put<number>(this.baseUrl + '/update', ingredient);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { Recipe } from '../_models/recipe';\r\nimport { RecipeIngredients } from '../_models/recipe-ingredients';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecipeService {\r\n  baseUrl = environment.apiUrl.concat('recipe');\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRecipe(userId: number, recipeId: number): Observable<Recipe> {\r\n    const params = new HttpParams()\r\n      .set('userId', userId.toString())\r\n      .set('recipeId', recipeId.toString());\r\n\r\n    return this.http.get<Recipe>(this.baseUrl + '/get', { params } );\r\n  }\r\n\r\n  getRecipes(userId: number): Observable<Recipe[]> {\r\n    const params = new HttpParams().set('userId', userId.toString());\r\n    return this.http.get<Recipe[]>(this.baseUrl + '/list', { params } );\r\n  }\r\n\r\n  getRecipeIngredientIds(userId: number, recipeId: number): Observable<number[]> {\r\n    const params = new HttpParams()\r\n      .set('userId', userId.toString())\r\n      .set('recipeId', recipeId.toString());\r\n\r\n    return this.http.get<number[]>(this.baseUrl + '/ingredients/ids', { params } );\r\n  }\r\n\r\n  addRecipe(recipe: Recipe): Observable<number> {\r\n    return this.http.post<number>(this.baseUrl + '/add', recipe);\r\n  }\r\n\r\n  updateRecipe(recipe: Recipe): Observable<number> {\r\n    return this.http.put<number>(this.baseUrl + '/update', recipe);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19zaGFyZWQvY29tcG9uZW50cy9wYWdlLW5vdC1mb3VuZC9wYWdlLW5vdC1mb3VuZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Page Not Found</h1>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatSelectModule,\r\n    MatListModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatInputModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatProgressSpinnerModule,\r\n        MatSelectModule,\r\n        MatListModule\r\n    ],\r\n    exports: [\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatInputModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatProgressSpinnerModule,\r\n        MatSelectModule,\r\n        MatListModule\r\n    ],\r\n})\r\nexport class MaterialModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PageNotFoundComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './_components/login/login.component';\r\nimport { HomeComponent } from './_components/home/home.component';\r\nimport { AuthGuard } from './_guards/auth.guard.ts';\r\nimport { PageNotFoundComponent } from './_shared/components/page-not-found/page-not-found.component';\r\nimport { RecipeListComponent } from './_components/recipes/recipe-list/recipe-list.component';\r\nimport { IngredientListComponent } from './_components/ingredients/ingredient-list/ingredient-list.component';\r\nimport { RecipeListResolver } from './_resolvers/recipe-list.resolver';\r\nimport { IngredientListResolver } from './_resolvers/ingredient-list.resolver.';\r\nimport { RegisterComponent } from './_components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n          path: 'recipe/list',\r\n          component: RecipeListComponent,\r\n          resolve: { recipes: RecipeListResolver }\r\n      },\r\n      {\r\n        path: 'ingredient/list',\r\n        component: IngredientListComponent,\r\n        resolve: { ingredients: IngredientListResolver }\r\n      }\r\n    ]\r\n  },\r\n  { path: 'home', component: HomeComponent, runGuardsAndResolvers: 'always', canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent, data: { animations: 'in' } },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'page-not-found', component: PageNotFoundComponent },\r\n  { path: '**', redirectTo: 'page-not-found', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    RecipeListResolver,\r\n    IngredientListResolver\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".dropdown-item, .dropdown-toggle {\\r\\n    cursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZHJvcGRvd24taXRlbSwgLmRyb3Bkb3duLXRvZ2dsZSB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Cookbook</a>\\r\\n        <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\r\\n        <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>Welcome {{ username | titlecase }}</a>\\r\\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\r\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/user/edit']\\\">Edit Profile</a>\\r\\n            <div class=\\\"dropdown-divider\\\"></div>\\r\\n            <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Router, RouterOutlet } from '@angular/router';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { AlertifyService } from './_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  get username() {\r\n    return this.authService.username;\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private alertifyService: AlertifyService) {\r\n\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout(() => {\r\n      this.alertifyService.success('Logged out');\r\n      this.router.navigate(['/login']);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BsDropdownModule, TabsModule } from 'ngx-bootstrap';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SharedModule } from './_shared/shared.module';\r\nimport { RecipeModule } from './_components/recipes/recipe.module';\r\nimport { IngredientModule } from './_components/ingredients/ingredient.module';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtModule, JWT_OPTIONS } from '@auth0/angular-jwt';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './_components/login/login.component';\r\nimport { HomeComponent } from './_components/home/home.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { AlertifyService } from './_services/alertify.service';\r\nimport { AuthGuard } from './_guards/auth.guard.ts';\r\nimport { HttpErrorInterceptor } from './_interceptors/http-error-interceptor';\r\nimport { MaterialModule } from './_shared/material.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RegisterComponent } from './_components/register/register.component';\r\n\r\nexport const tokenGetter = () => localStorage.getItem('token');\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      LoginComponent,\r\n      RegisterComponent,\r\n      HomeComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      AppRoutingModule,\r\n      HttpClientModule,\r\n      ReactiveFormsModule,\r\n      BsDropdownModule.forRoot(),\r\n      JwtModule.forRoot({\r\n         config: {\r\n            tokenGetter,\r\n            whitelistedDomains: ['localhost:5000'],\r\n            blacklistedRoutes: ['localhost:5000/api/auth']\r\n         }\r\n      }),\r\n      SharedModule,\r\n      MaterialModule,\r\n      RecipeModule,\r\n      IngredientModule,\r\n      BrowserAnimationsModule\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      AlertifyService,\r\n      AuthGuard,\r\n      {\r\n         provide: HTTP_INTERCEPTORS,\r\n         useClass: HttpErrorInterceptor,\r\n         multi: true,\r\n      }\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5000/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}